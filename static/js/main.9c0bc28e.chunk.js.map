{"version":3,"sources":["components/StyledComponents/index.js","565547.svg","components/SingInForm/index.js","components/SingUpForm/index.js","App.js","reportWebVitals.js","index.js"],"names":["Title","styled","h2","Block","div","CheckBoxInput","input","Input","props","rightMargin","check","Span","span","Button","button","Container","noAdaptive","ImegeСontainer","Image","img","NavLink","SingInForm","useState","email","setEmail","pass","setPass","RememberMeCheckBox","changeRememberMeCheckBox","emailState","setEmailState","passState","setPassState","useEffect","storageEmail","localStorage","getItem","storagePass","src","LockImage","placeholder","type","value","onChange","target","regex","RegExp","test","checked","onClick","setItem","to","SingUpForm","firstName","setFirstName","secondName","setSecondName","checkBoxState","changeCheckBoxState","firstNameState","setFirstNameState","secondNameState","setSecondNameState","JSON","stringify","password","alert","register","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c0bc28e.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Title = styled.h2`\r\n    color: white;\r\n    font-size: 1.5em;\r\n    font-weight: none;\r\n    text-align: center;\r\n    margin:  0 0 12px 0;\r\n`\r\n\r\nexport const Block = styled.div`\r\n    padding: 1em;\r\n    display: block;\r\n    background: black;\r\n    \r\n    height: 600px;\r\n    margin: 0 auto 0 auto;\r\n\r\n\r\n    @media (min-width: 760px) {\r\n      width: 660px;\r\n    }\r\n\r\n    @media (min-width: 660px) {\r\n      width: 560px;\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n      width: 340px;\r\n    }\r\n\r\n    @media (max-width: 320px) {\r\n      width: 300px;\r\n    }\r\n\r\n    @media (max-width: 280px) {\r\n      width: 260px;\r\n    }\r\n`\r\n\r\nexport const CheckBoxInput = styled.input`\r\n  display: inline-block;\r\n  background: black;\r\n  border-radius: 3px;\r\n  margin: auto 20px auto 0px;\r\n`\r\n\r\n\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  padding: 1em;\r\n  width: 100%;\r\n  margin:  0 ${props => props.rightMargin ? props.rightMargin : '0'} 12px 0;\r\n  color: rgb(125, 121, 121);\r\n  background: black;\r\n  border: 1px solid ${props => props.check ? 'rgb(87, 80, 80)' : 'red'};\r\n  border-radius: 3px;\r\n  &:focus{\r\n    color: white;\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const Span = styled.span`\r\n  display: inline-block;\r\n  font-size: 14;\r\n  margin: auto 0 auto 0;\r\n  color: white;\r\n  @media (max-width: 360px) {\r\n    font-size: 12;\r\n    }\r\n`\r\nexport const Button = styled.button`\r\n  display: block;\r\n  background: blue;\r\n  margin: 18px auto 15px auto;\r\n  padding: 0.5em;\r\n  width: 250px;\r\n\r\n  @media (max-width: 280px) {\r\n    width: 200px;\r\n  }\r\n`\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  ${props => props.noAdaptive ? ' ' : '@media (max-width: 360px) {flex-direction: column;}'}\r\n \r\n`\r\n\r\nexport const ImegeСontainer = styled.div`\r\n  padding: 15px;\r\n  width: 50px;\r\n  height: 50px;\r\n  background: pink;\r\n  border-radius: 30px;\r\n  margin: 1em auto 1em auto;\r\n\r\n`\r\n\r\nexport const Image = styled.img`\r\n  object-fit: cover;\r\n  width: 20px;\r\n`\r\n\r\nexport const NavLink = styled.span`\r\n  display: inline-block;\r\n  outline: none;\r\n  padding: 10px;\r\n  width: 20em;\r\n  margin: auto auto auto auto;\r\n  color: blue;\r\n`","export default __webpack_public_path__ + \"static/media/565547.9fc8846a.svg\";","import React, { useEffect, useState } from 'react'\r\nimport {Title, Block, CheckBoxInput, Input, Span, Button, Container, ImegeСontainer, Image, NavLink} from '../StyledComponents'\r\nimport LockImage from '../../565547.svg'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n  \r\n\r\nconst SingInForm = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('');\r\n    const [RememberMeCheckBox, changeRememberMeCheckBox] = useState(false)\r\n\r\n    const [emailState, setEmailState] = useState (true);\r\n    const [passState, setPassState] = useState(true);\r\n\r\n    const SingIn = () => {\r\n\r\n        const regex  = new RegExp('^\\s*$', 'g');\r\n\r\n        if(emailState){\r\n            setEmailState(emailState => emailState = !regex.test(email));\r\n        }\r\n        if(passState){\r\n            setPassState(passState => passState = !regex.test(pass));\r\n        }\r\n        if(emailState  && passState && RememberMeCheckBox){\r\n            localStorage.setItem('storageEmail', email);\r\n            localStorage.setItem('storagePass', pass);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const storageEmail = localStorage.getItem('storageEmail');\r\n        const storagePass = localStorage.getItem('storagePass');\r\n        \r\n        if(storageEmail != null && storagePass != null)\r\n            setEmail(email => email =  storageEmail)\r\n            setPass(pass => pass = storagePass)\r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <div> \r\n            <Block>\r\n                <ImegeСontainer>\r\n                    <Image src = {LockImage}/>\r\n                </ImegeСontainer>\r\n                <Title>\r\n                    Sing in\r\n                </Title>\r\n                <Input \r\n                placeholder=\"Email Address *\" \r\n                type=\"text\" value = {email} \r\n                onChange = {value => setEmail(email => {\r\n\r\n                    email = value.target.value;\r\n    \r\n                    const regex  = new RegExp('...@..\\...');\r\n                    setEmailState(emailState => emailState = regex.test(email));\r\n                    return email;\r\n                })} \r\n                check={emailState}/>\r\n                <Input  \r\n                placeholder=\"Password *\" \r\n                type=\"password\" value = {pass} \r\n                onChange = {value => setPass(pass => {\r\n                    pass = value.target.value;\r\n    \r\n                    const regex  = new RegExp('........')\r\n    \r\n                    setPassState(passState => passState = regex.test(pass));\r\n                    return pass;\r\n    \r\n                })} \r\n                check={passState}/>\r\n                <Container noAdaptive>\r\n                    <CheckBoxInput type=\"checkbox\" checked={RememberMeCheckBox} onChange = {() => changeRememberMeCheckBox(RememberMeCheckBox => !RememberMeCheckBox)}/>\r\n                    <Span>Remember me</Span>\r\n                </Container>  \r\n                <Button onClick = {SingIn}>SIGN IN</Button>\r\n                <Link to='/SingUpForm'><NavLink>Don't heve an account? Sing in</NavLink></Link>\r\n            </Block>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingInForm;","import React, { useState } from 'react'\r\nimport {Title, Block, CheckBoxInput, Input, Span, Button, Container, ImegeСontainer, Image, NavLink} from '../StyledComponents'\r\nimport LockImage from '../../565547.svg'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n  \r\n\r\nconst SingUpForm = () => {\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [secondName, setSecondName] = useState('');\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('');\r\n\r\n    const [checkBoxState, changeCheckBoxState] = useState(false)\r\n    const [emailState, setEmailState] = useState (true);\r\n    const [passState, setPassState] = useState(true);\r\n    const [firstNameState, setFirstNameState] = useState(true)\r\n    const [secondNameState, setSecondNameState] = useState(true)\r\n    \r\n\r\n    const register = () => {\r\n        const regex  = new RegExp('^\\s*$', 'g')\r\n\r\n        setFirstNameState(firstNameState => firstNameState = !regex.test(firstName));\r\n        setSecondNameState(secondNameState => secondNameState = !regex.test(secondName));\r\n        if(emailState){\r\n            setEmailState(emailState => emailState = !regex.test(email));\r\n        }\r\n        if(passState){\r\n            setPassState(passState => passState = !regex.test(pass));\r\n        }\r\n        if(emailState  && passState && firstNameState && secondNameState){\r\n            localStorage.setItem(JSON.stringify(email), { \r\n                password: pass,\r\n                email: email,\r\n                firstName: firstName,\r\n                secondName: secondName,\r\n    })\r\n        }\r\n        else{\r\n            alert(\"no register\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Block>\r\n            <ImegeСontainer>\r\n                <Image src = {LockImage}/>\r\n            </ImegeСontainer>\r\n            <Title>Sing up</Title>\r\n            <Container>\r\n                <Input \r\n                placeholder=\"First Name *\" \r\n                type=\"text\" value = {firstName} \r\n                onChange = {value => setFirstName(firstName => {\r\n\r\n                    firstName = value.target.value\r\n                    \r\n                    return firstName;\r\n\r\n                    })}\r\n                    check={firstNameState} rightMargin = {'0.5em'}/>\r\n\r\n                <Input \r\n                placeholder=\"Second Name *\" \r\n                type=\"text\" value = {secondName} \r\n                onChange = {value => setSecondName(secondName => secondName = value.target.value)}\r\n                check={secondNameState}/>\r\n            </Container>\r\n\r\n\r\n\r\n            <Input \r\n            placeholder=\"Email Address *\" \r\n            type=\"text\" value = {email} \r\n            onChange = {value => setEmail(email => {\r\n\r\n                email = value.target.value;\r\n\r\n                const regex  = new RegExp('...@..\\...');\r\n                setEmailState(emailState => emailState = regex.test(email));\r\n                return email;\r\n            })} \r\n            check={emailState}/>\r\n\r\n\r\n\r\n            <Input  placeholder=\"Password *\" \r\n            type=\"password\" value = {pass} \r\n            onChange = {value => setPass(pass => {\r\n                pass = value.target.value;\r\n\r\n                const regex  = new RegExp('........')\r\n\r\n                setPassState(passState => passState = regex.test(pass));\r\n                return pass;\r\n\r\n            })} \r\n            check={passState}/>\r\n\r\n            <Container noAdaptive >\r\n                    <CheckBoxInput type=\"checkbox\" checked={checkBoxState} onChange = {() => changeCheckBoxState(checkBoxState => !checkBoxState)} />\r\n                    <Span>I want to receive inspiration, marketing promotions and updates vie email</Span>\r\n                </Container> \r\n                <Button onClick = { () => \r\n                 register()}>\r\n                    SIGN UP\r\n                </Button>\r\n                <Link to='/SingUnForm'><NavLink>Alredy have an acconunt? Sing in</NavLink></Link>\r\n            </Block>\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\nexport default SingUpForm;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport './App.css';\nimport SingInForm from './components/SingInForm';\nimport SingUpForm from './components/SingUpForm';\n\nexport default function App() {\n  return (\n    <Router>\n\n        <Switch>\n          <Route path=\"/SingInForm\">\n            <SingInForm />\n          </Route>\n          <Route path=\"/SingUpForm\">\n            <SingUpForm />\n          </Route>\n          <Route path=\"/\">\n          <SingInForm />\n          </Route>\n        </Switch>\n  \n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}